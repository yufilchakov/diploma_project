services:

  redis:
    image: redis:latest
    restart: on-failure
    expose:
      - '6379'
    healthcheck:
      test: redis-cli ping
      interval: 10s
      retries: 3
      timeout: 3s

  db:
    image: postgres:16-alpine
    restart: on-failure
    env_file:
      - .env
    expose:
      - '5432'
    volumes:
      - documents_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', '-c', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 10s
      retries: 5
      timeout: 5s

  app:
    build: .
    tty: true
    ports:
      - '8000:8000'
    command: sh -c "python manage.py migrate && python manage.py runserver 127.0.0.1:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app

  celery:
    build: .
    tty: true
    command: celery -A config worker -l INFO -P eventlet
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
      - app

volumes:
  documents_data: